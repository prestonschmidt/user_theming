<?php

use Drupal\user\Entity;

/**
 * Implements hook_theme_suggestions_user().
 *
 * Add user display mode template suggestions.
 * 
 * @inheritdoc
 */
function user_theming_theme_suggestions_user(array $variables) {
  return [
    'user__' . $variables['elements']['#view_mode']
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views template suggestions.
 * 
 * @inheritdoc
 */
function user_theming_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  return [
    'views_view__' . $variables['view']->id()
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views unformatted template suggestions.
 * 
 * @inheritdoc
 */
function user_theming_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {
  return [
    'views_view_unformatted__' . $variables['view']->id()
  ];
}

/**
 * Implements hook_theme().
 *
 * Add user template files to the theme.
 * 
 * @inheritdoc
 */
function user_theming_theme($existing, $type, $theme, $path) {
  return [
    // User templates.
    'user__full' => [
      'template' => 'user--full',
      'base hook' => 'user',
    ],
    'user__inline_grid' => [
      'template' => 'user--inline-grid',
      'base hook' => 'user',
    ],
    'user__square_grid' => [
      'template' => 'user--square-grid',
      'base hook' => 'user',
    ],
    // Field templates.
    'field__user_picture' => [
      'template' => 'field--user-picture',
      'base hook' => 'field',
    ],
    // Views templates.
    'views_view__users_inline_grid_views_block' => [
      'template' => 'views-view--users-inline-grid-views-block',
      'base hook' => 'views_view',
    ],
    'views_view__users_square_grid_views_block' => [
      'template' => 'views-view--users-square-grid-views-block',
      'base hook' => 'views_view',
    ],
    // Views unformatted templates.
    'views_view_unformatted__users_inline_grid_views_block' => [
      'template' => 'views-view-unformatted--users-inline-grid-views-block',
      'base hook' => 'views_view_unformatted',
    ],
    'views_view_unformatted__users_square_grid_views_block' => [
      'template' => 'views-view-unformatted--users-square-grid-views-block',
      'base hook' => 'views_view_unformatted',
    ],
  ];
}

/**
 * Implements hook_preprocess_user().
 *
 * @inheritdoc
 */
function user_theming_preprocess_user(&$variables) {

  // Get user object.
  $user = $variables['elements']['#user'];

  // Get our form config.
  $config = \Drupal::config('user_theming.user_theming_settings');

  // Set show_active_session_mark config value to $variables.
  $variables['showActiveSessionMark'] = $config->get('show_active_session_mark');

  // Set use_module_provided_css.
  $useModuleProvidedCSS = $config->get('use_module_provided_css');

  // Check if we want to show the active user mark.
  if ($user->access->value > (time() - 800)) {
    $variables['activeUserMark'] = [
      '#type' => 'inline_template',
      '#template' => '<span class="status-active-mark active"></span>',
    ];
  }
  else {
    $variables['activeUserMark'] = [
      '#type' => 'inline_template',
      '#template' => '<span class="status-active-mark inactive"></span>',
    ];
  }

  // Set dynamic user name.
  if (!$user->user_last_name->isEmpty()) {
    $variables['userName'] = $user->user_first_name->value;
  }
  else {
    $variables['userName'] = $user->name->value;
  }

  // Add our styles library.
  if ($useModuleProvidedCSS == 'yes') {
    $variables['#attached']['library'][] = 'user_theming/styles';
  }
  
}
